<import name="my-popup" src="apex-ui/components/popup/index"></import>
<import name="my-checkbox" src="apex-ui/components/checkbox/index"></import>
<import name="my-select" src="apex-ui/components/select/index"></import>
<import name="my-icon" src="apex-ui/components/icon/index"></import>

<template>
  <div class="chart-wrap">
    <canvas id="chartPie4" class="chart" style="width: {{width}}px; height: {{height}}px;" ontouchstart="ontouchstart"></canvas>

    <div class="btn-row">
      <text class="btn btn-default" @click="openEditConfig">配置参数</text>
    </div>
    <div class="btn-row">
      <text class="btn btn-reset" @click="initChart">初始化图表</text>
    </div>
    <div class="btn-row">
      <text class="btn btn-primary" @click="updateChart">修改参数</text>
    </div>

    <my-popup id="popup" position="right" mask="{{true}}" onclose="closeEditConfig">
      <list class="config-wrap">
        <list-item type="list-item" class="config-item">
          <text class="config-item-title">opts</text>
          <my-checkbox value="animation" position="right" shape="square" checked="{{config.animation}}" onchange="changeConfig('animation')"></my-checkbox>
          <my-checkbox
            value="backgroundColor"
            position="right"
            shape="square"
            checked="{{config.backgroundColor}}"
            onchange="changeConfig('backgroundColor')"
          ></my-checkbox>
          <my-checkbox value="legend.show" position="right" shape="square" checked="{{config.legendShow}}" onchange="changeConfig('legendShow')"></my-checkbox>
          <my-checkbox value="label.show" position="right" shape="square" checked="{{config.labelShow}}" onchange="changeConfig('labelShow')"></my-checkbox>
          <text class="config-item-title">series</text>
          <div class="select" onclick="selectShow('selectSeriesDataLength')">
            <text>dataLength</text>
            <div>
              <text>{{ config.seriesDataLength }}</text>
              <my-icon type="arrow-fwd" size="40"></my-icon>
            </div>
          </div>
          <div class="select" onclick="selectShow('selectSeriesRadius')">
            <text>radius</text>
            <div>
              <text>{{ config.seriesRadius }}</text>
              <my-icon type="arrow-fwd" size="40"></my-icon>
            </div>
          </div>
          <my-checkbox
            value="disablePieStroke"
            position="right"
            shape="square"
            checked="{{config.seriesDisablePieStroke}}"
            onchange="changeConfig('seriesDisablePieStroke')"
          ></my-checkbox>
        </list-item>
      </list>

      <div class="config-btn btn-row">
        <text class="btn btn-reset" @click="resetConfig">重置参数</text>
        <text class="btn btn-default" @click="closeEditConfig">关闭</text>
      </div>
    </my-popup>

    <my-select id="selectSeriesDataLength" oncomfirm="selectClose('seriesDataLength')"></my-select>
    <my-select id="selectSeriesRadius" oncomfirm="selectClose('seriesRadius')"></my-select>
  </div>
</template>

<script>
import Charts from 'apex-ui/components/charts/qacharts-min.js'

let $chart = null

export default {
  props: {
    width: {
      default: 600,
    },
    height: {
      default: 400,
    },
  },
  data() {
    return {
      config: {
        animation: true,
        backgroundColor: true,
        legendShow: true,
        labelShow: true,
        seriesDataLength: '5',
        seriesRadius: '0,80%',
        seriesDisablePieStroke: true,
      },
    }
  },
  resetConfig() {
    this.config = {
      animation: true,
      backgroundColor: true,
      legendShow: true,
      labelShow: true,
      seriesDataLength: '5',
      seriesRadius: '0,80%',
      seriesDisablePieStroke: true,
    }
  },
  changeConfig(key, { detail }) {
    this.config[key] = detail.current
  },
  openEditConfig() {
    this.$child('popup').show()
  },
  closeEditConfig() {
    this.$child('popup').hide()
  },
  selectShow(id) {
    let options
    switch (id) {
      case 'selectSeriesDataLength':
        options = ['2', '3', '4', '5', '6', '7', '8', '9']
        break
      case 'selectSeriesRadius':
        options = ['0,80%', '60%,80%']
        break
    }

    this.$child(id).showSelect({
      options,
    })
  },
  selectClose(key, event) {
    this.config[key] = event.detail.data || '请选择'
  },
  getMockData() {
    let mockData = this.$app.$def.getMockData(Number(this.config.seriesDataLength), 0, 1000, 0)

    mockData = mockData.map((dataItem, dataIndex) => {
      return {
        name: `cat${dataIndex + 1}`,
        value: dataItem,
      }
    })

    return mockData
  },

  updateChart(type) {
    if (!$chart) return

    let mockData = this.getMockData()

    let opts = {
      animation: this.config.animation,
      backgroundColor: this.config.backgroundColor ? '#eeeeee' : '#ffffff',
      legend: {
        show: this.config.legendShow,
      },
      label: {
        show: this.config.labelShow,
      },
      series: [
        {
          type: 'pie',
          radius: this.config.seriesRadius.split(','),
          disablePieStroke: this.config.seriesDisablePieStroke,
          data: mockData,
        },
      ],
    }

    $chart.updateData(opts)
  },
  initChart() {
    this.resetConfig()

    let mockData = this.getMockData()

    return new Promise((resolve, reject) => {
      $chart = new Charts({
        element: this.$element('chartPie4'),
        width: this.width,
        height: this.height,
        backgroundColor: this.config.backgroundColor ? '#eeeeee' : '#ffffff',
        animation: this.config.animation,
        animationDuration: 1000,
        animationTiming: 'easeInOut', // easeIn, easeOut, easeInOut, linear
        padding: [20, 20, 20, 20],
        legend: {
          show: this.config.legendShow,
          type: 'default',
          marginTop: 8,
          itemGap: 15,
          shapeWidth: 15,
          shapeHeight: 15,
          textStyle: {
            fontSize: 15,
            color: '#333333',
            padding: 5,
          },
        },
        label: {
          show: this.config.labelShow,
          fontSize: 10,
          color: 'auto',
          margin: 2,
        },
        series: [
          {
            name: '饼图',
            type: 'pie',
            center: ['50%', '50%'],
            radius: this.config.seriesRadius.split(','),
            offsetAngle: 0,
            disablePieStroke: this.config.seriesDisablePieStroke,
            labelLine: {
              lineDotRadius: 3,
              lineWidth: 1,
              length1: 25,
              length2: 15,
            },
            label: {
              show: true,
              fontSize: 10,
              color: 'auto',
              margin: 2,
            },
            data: mockData,
          },
        ],
        onRenderComplete: () => {
          console.log('chartPie4 renderComplete')
          resolve()
        },
      })
    })
  },
  ontouchstart(e) {
    console.log(`chartPie4 touchstart`)
  },
}
</script>

<style lang="less">
@import '../../../../common/styles/common.less';
</style>
